name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  # Check for outdated dependencies
  check-outdated:
    runs-on: ubuntu-latest
    outputs:
      has-updates: ${{ steps.check.outputs.has-updates }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated dependencies
        id: check
        run: |
          echo "## Outdated Dependencies Report" >> $GITHUB_STEP_SUMMARY

          has_updates=false
          for workspace in TapPrint-admin TapPrint-backend TapPrint-cockpit; do
            echo "### $workspace" >> $GITHUB_STEP_SUMMARY
            outdated_output=$(npm outdated --workspace=$workspace --json 2>/dev/null || echo '{}')

            if [ "$outdated_output" != "{}" ] && [ "$outdated_output" != "" ]; then
              has_updates=true
              echo "Outdated packages found in $workspace"
              echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
              echo "$outdated_output" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            else
              echo "No outdated packages in $workspace" >> $GITHUB_STEP_SUMMARY
            fi
          done

          echo "has-updates=$has_updates" >> $GITHUB_OUTPUT

  # Update dependencies
  update-dependencies:
    runs-on: ubuntu-latest
    needs: check-outdated
    if: needs.check-outdated.outputs.has-updates == 'true'
    strategy:
      fail-fast: false
      matrix:
        workspace: ['TapPrint-admin', 'TapPrint-backend', 'TapPrint-cockpit']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: Update dependencies in ${{ matrix.workspace }}
        run: |
          cd ${{ matrix.workspace }}

          update_type="${{ github.event.inputs.update_type || 'patch' }}"

          case $update_type in
            "patch")
              ncu -u --target patch
              ;;
            "minor")
              ncu -u --target minor
              ;;
            "major")
              ncu -u
              ;;
          esac

      - name: Install updated dependencies
        run: |
          cd ${{ matrix.workspace }}
          npm install
          npm audit fix --audit-level moderate || true

      - name: Run tests
        run: |
          cd ${{ matrix.workspace }}
          npm test || echo "Tests failed - manual review required"

      - name: Generate update summary
        run: |
          cd ${{ matrix.workspace }}
          if git diff --name-only | grep -q "package.json"; then
            echo "## ${{ matrix.workspace }} Updates" >> ../update-summary.md
            echo "\`\`\`diff" >> ../update-summary.md
            git diff package.json >> ../update-summary.md || true
            echo "\`\`\`" >> ../update-summary.md
          fi

      - name: Upload updated package files
        uses: actions/upload-artifact@v4
        with:
          name: updated-packages-${{ matrix.workspace }}
          path: |
            ${{ matrix.workspace }}/package.json
            ${{ matrix.workspace }}/package-lock.json
          retention-days: 7

  # Create PR with dependency updates
  create-pr:
    runs-on: ubuntu-latest
    needs: [check-outdated, update-dependencies]
    if: needs.check-outdated.outputs.has-updates == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Restore updated files
        run: |
          for workspace in TapPrint-admin TapPrint-backend TapPrint-cockpit; do
            if [ -d "./artifacts/updated-packages-$workspace" ]; then
              cp "./artifacts/updated-packages-$workspace/package.json" "$workspace/"
              cp "./artifacts/updated-packages-$workspace/package-lock.json" "$workspace/" || true
            fi
          done

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create branch and commit changes
        run: |
          branch_name="dependency-updates-$(date +%Y%m%d)"
          git checkout -b "$branch_name"

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "chore: update dependencies (${{ github.event.inputs.update_type || 'patch' }})"
          git push origin "$branch_name"

          echo "BRANCH_NAME=$branch_name" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.BRANCH_NAME != ''
        run: |
          gh pr create \
            --title "chore: Automated dependency updates (${{ github.event.inputs.update_type || 'patch' }})" \
            --body "$(cat <<'EOF'
          ## Automated Dependency Updates

          This PR contains automated dependency updates for all workspaces.

          **Update type:** ${{ github.event.inputs.update_type || 'patch' }}

          ### Changes
          - Updated dependencies in TapPrint-admin
          - Updated dependencies in TapPrint-backend
          - Updated dependencies in TapPrint-cockpit

          ### Testing
          - [ ] Automated tests have been run
          - [ ] Manual testing required for major version updates

          ### Notes
          Please review the changes carefully, especially for major version updates.
          Run the full test suite before merging.

          ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
          EOF
          )" \
            --head "${{ env.BRANCH_NAME }}" \
            --base main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}