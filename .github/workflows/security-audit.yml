name: Security Audit

on:
  schedule:
    # Run security audit daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main, develop ]
    paths:
      - '**/package.json'
      - '**/package-lock.json'
  pull_request:
    paths:
      - '**/package.json'
      - '**/package-lock.json'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  # Detect changes in package files
  changes:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.changes.outputs.changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect package changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          list-files: json
          filters: |
            admin:
              - 'TapPrint-admin/package*.json'
            backend:
              - 'TapPrint-backend/package*.json'
            cockpit:
              - 'TapPrint-cockpit/package*.json'
            root:
              - 'package*.json'

  # Security audit for workspaces
  audit:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.packages != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        workspace: ['TapPrint-admin', 'TapPrint-backend', 'TapPrint-cockpit']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ${{ matrix.workspace }}/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Run security audit for ${{ matrix.workspace }}
        run: npm audit --workspace=${{ matrix.workspace }}
        continue-on-error: true

      - name: Generate audit report for ${{ matrix.workspace }}
        run: |
          npm audit --workspace=${{ matrix.workspace }} --audit-level=moderate --json > audit-${{ matrix.workspace }}.json || true
          echo "## Security Audit Report for ${{ matrix.workspace }}" >> $GITHUB_STEP_SUMMARY
          npm audit --workspace=${{ matrix.workspace }} --audit-level=moderate >> $GITHUB_STEP_SUMMARY || echo "No vulnerabilities found" >> $GITHUB_STEP_SUMMARY

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-${{ matrix.workspace }}
          path: audit-${{ matrix.workspace }}.json
          retention-days: 30

  # License compliance check
  license-check:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.packages != '[]' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Install license checker
        run: npm install -g license-checker

      - name: Check licenses
        run: |
          echo "## License Compliance Report" >> $GITHUB_STEP_SUMMARY
          for workspace in TapPrint-admin TapPrint-backend TapPrint-cockpit; do
            echo "### $workspace" >> $GITHUB_STEP_SUMMARY
            cd $workspace
            license-checker --summary --excludePrivatePackages >> ../$GITHUB_STEP_SUMMARY || echo "No license issues found" >> ../$GITHUB_STEP_SUMMARY
            cd ..
          done