name: Performance Monitoring

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  # Detect changes
  changes:
    runs-on: ubuntu-latest
    outputs:
      admin: ${{ steps.changes.outputs.admin }}
      backend: ${{ steps.changes.outputs.backend }}
      cockpit: ${{ steps.changes.outputs.cockpit }}
      any: ${{ steps.changes.outputs.admin == 'true' || steps.changes.outputs.backend == 'true' || steps.changes.outputs.cockpit == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect workspace changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            admin:
              - 'TapPrint-admin/**'
            backend:
              - 'TapPrint-backend/**'
            cockpit:
              - 'TapPrint-cockpit/**'

  # Bundle size analysis
  bundle-analysis:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.admin == 'true' || needs.changes.outputs.cockpit == 'true'
    strategy:
      fail-fast: false
      matrix:
        workspace: [
          { name: 'admin', path: 'TapPrint-admin', condition: needs.changes.outputs.admin == 'true' },
          { name: 'cockpit', path: 'TapPrint-cockpit', condition: needs.changes.outputs.cockpit == 'true' }
        ]
    steps:
      - name: Skip if no changes
        if: ${{ !fromJson(matrix.workspace.condition) }}
        run: echo "Skipping bundle analysis for ${{ matrix.workspace.name }} - no changes detected"

      - name: Checkout code
        if: ${{ fromJson(matrix.workspace.condition) }}
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: ${{ fromJson(matrix.workspace.condition) }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies
        if: ${{ fromJson(matrix.workspace.condition) }}
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ${{ matrix.workspace.path }}/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: ${{ fromJson(matrix.workspace.condition) }}
        run: npm ci

      - name: Build with bundle analysis
        if: ${{ fromJson(matrix.workspace.condition) }}
        run: |
          cd ${{ matrix.workspace.path }}
          ANALYZE=true npm run build
        env:
          ANALYZE: true

      - name: Upload bundle analysis
        if: ${{ fromJson(matrix.workspace.condition) }}
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis-${{ matrix.workspace.name }}
          path: ${{ matrix.workspace.path }}/.next/analyze/
          retention-days: 30

  # Performance tests for backend
  performance-test:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            TapPrint-backend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Run performance tests
        run: |
          cd TapPrint-backend
          npm run test:performance 2>&1 | tee performance-results.txt || echo "Performance tests completed with warnings"

      - name: Generate performance report
        run: |
          echo "## Performance Test Results" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat TapPrint-backend/performance-results.txt >> $GITHUB_STEP_SUMMARY || echo "No performance results found" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: TapPrint-backend/performance-results.txt
          retention-days: 30

  # Lighthouse CI for frontend apps
  lighthouse:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.admin == 'true' || needs.changes.outputs.cockpit == 'true'
    strategy:
      fail-fast: false
      matrix:
        workspace: [
          { name: 'admin', path: 'TapPrint-admin', port: '3050', condition: needs.changes.outputs.admin == 'true' },
          { name: 'cockpit', path: 'TapPrint-cockpit', port: '3060', condition: needs.changes.outputs.cockpit == 'true' }
        ]
    steps:
      - name: Skip if no changes
        if: ${{ !fromJson(matrix.workspace.condition) }}
        run: echo "Skipping Lighthouse audit for ${{ matrix.workspace.name }} - no changes detected"

      - name: Checkout code
        if: ${{ fromJson(matrix.workspace.condition) }}
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: ${{ fromJson(matrix.workspace.condition) }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies
        if: ${{ fromJson(matrix.workspace.condition) }}
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ${{ matrix.workspace.path }}/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: ${{ fromJson(matrix.workspace.condition) }}
        run: npm ci

      - name: Build application
        if: ${{ fromJson(matrix.workspace.condition) }}
        run: npm run build --workspace=${{ matrix.workspace.path }}

      - name: Install Lighthouse CI
        if: ${{ fromJson(matrix.workspace.condition) }}
        run: npm install -g @lhci/cli

      - name: Start application
        if: ${{ fromJson(matrix.workspace.condition) }}
        run: |
          cd ${{ matrix.workspace.path }}
          npm start &
          sleep 30
        env:
          PORT: ${{ matrix.workspace.port }}

      - name: Run Lighthouse CI
        if: ${{ fromJson(matrix.workspace.condition) }}
        run: |
          lhci collect --url=http://localhost:${{ matrix.workspace.port }} --numberOfRuns=3
          lhci assert --preset=lighthouse:recommended
        continue-on-error: true

      - name: Upload Lighthouse results
        if: ${{ fromJson(matrix.workspace.condition) }}
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results-${{ matrix.workspace.name }}
          path: .lighthouseci/
          retention-days: 30